generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Category {
  id          Int           @id @default(autoincrement())
  name        String        // English name as base
  items       FoodItem[]
  translations Translation[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model FoodItem {
  id            Int           @id @default(autoincrement())
  name          String        // English name as base
  categoryId    Int
  category      Category      @relation(fields: [categoryId], references: [id])
  translations  Translation[]
  
  // Image handling
  imageUrl      String?
  thumbnailUrl  String?
  
  // Inventory management
  itemLimit     Int?
  inStock       Boolean       @default(true)
  mustGo        Boolean       @default(false)
  lowSupply     Boolean       @default(false)
  
  // Dietary attributes
  kosher        Boolean       @default(false)
  halal         Boolean       @default(false)
  vegetarian    Boolean       @default(false)
  vegan         Boolean       @default(false)
  glutenFree    Boolean       @default(false)
  
  // Quality attributes
  organic       Boolean       @default(false)
  readyToEat    Boolean       @default(false)
  
  // Custom fields for flexibility
  customFields  CustomField[]
  
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  @@index([categoryId])
}

model Translation {
  id             Int       @id @default(autoincrement())
  language       String    // e.g., "es", "ru", "uk", "zh", "vi", "ko", "ar"
  translatedText String
  categoryId     Int?
  category       Category? @relation(fields: [categoryId], references: [id])
  foodItemId     Int?
  foodItem       FoodItem? @relation(fields: [foodItemId], references: [id])
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  @@unique([language, categoryId])
  @@unique([language, foodItemId])
}

model CustomField {
  id          Int       @id @default(autoincrement())
  key         String
  value       String
  foodItemId  Int
  foodItem    FoodItem  @relation(fields: [foodItemId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([foodItemId])
}